
#Область EventHandlers

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьСписокВыбораЭлементаИзСтруктуры(Элементы.РедакторКода1С,
		UT_CodeEditorClientServer.ВариантыРедактораКода());
	
	УстановитьСписокВыбораЭлементаИзСтруктуры(Элементы.MonacoEditorTheme,
		UT_CodeEditorClientServer.ВариантыТемыРедактораMonaco());
	
	УстановитьСписокВыбораЭлементаИзСтруктуры(Элементы.ЯзыкСинтаксисаРедактораMonaco,
		UT_CodeEditorClientServer.ВариантыЯзыкаСинтаксисаРедактораMonaco());

	ПараметрыРедактора = UT_CodeEditorServer.ТекущиеПараметрыРедактораКода();	
	РедакторКода1С = ПараметрыРедактора.Вариант;
	FontSize = ПараметрыРедактора.FontSize;	

	MonacoEditorTheme = ПараметрыРедактора.Monaco.Тема;
	MonacoEditorScriptVariant = ПараметрыРедактора.Monaco.ЯзыкСинтаксиса;
	UseScriptMap = ПараметрыРедактора.Monaco.UseScriptMap;
	HideLineNumbers = ПараметрыРедактора.Monaco.HideLineNumbers;
	ВысотаСтрок = ПараметрыРедактора.Monaco.LinesHeight;

	ConfigurationSourceFilesDirectories.Очистить();
	Элементы.ConfigurationSourceFilesDirectoriesSource.СписокВыбора.Очистить();
	ИсточникиИсходногоКода = UT_CodeEditorServer.ДоступныеИсточникиИсходногоКода();
	
	Для Каждого ТекОписаниеКаталога Из ПараметрыРедактора.Monaco.КаталогиИсходныхФайлов Цикл
		НС = ConfigurationSourceFilesDirectories.Добавить();
		НС.Directory = ТекОписаниеКаталога.Directory;
		НС.Source = ТекОписаниеКаталога.Source;
	
		Элементы.ConfigurationSourceFilesDirectoriesSource.СписокВыбора.Добавить(НС.Source);
	КонецЦикла;

	Для Каждого ТекИсточник Из ИсточникиИсходногоКода Цикл
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Source", ТекИсточник.Значение);
		
		НайденныеСтроки = ConfigurationSourceFilesDirectories.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество()>0 Тогда
			Продолжить;
		КонецЕсли;
		
		НС = ConfigurationSourceFilesDirectories.Добавить();
		НС.Source = ТекИсточник.Значение;
		
		Элементы.ConfigurationSourceFilesDirectoriesSource.СписокВыбора.Добавить(ТекИсточник.Значение);
		
	КонецЦикла;

	УстановитьВидимостьЭлементов();
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)

	ВариантыРедактораКода = UT_CodeEditorClientServer.ВариантыРедактораКода();
	
	Если РедакторКода1С = ВариантыРедактораКода.Monaco Тогда
		ПроверяемыеРеквизиты.Добавить("MonacoEditorTheme");
		ПроверяемыеРеквизиты.Добавить("MonacoEditorScriptVariant");
	КонецЕсли;

	НомерСтроки = 1;
	Для Каждого Стр Из ConfigurationSourceFilesDirectories Цикл
		Если Не ЗначениеЗаполнено(Стр.Source) 
			И ЗначениеЗаполнено(Стр.Каталог) Тогда
			UT_CommonClientServer.MessageToUser("В строке " + НомерСтроки
				+ " не заполнен Source исходного кода",,,, Отказ);
		КонецЕсли;
		
		НомерСтроки = НомерСтроки +1;
	КонецЦикла;

	ТЗИсточников = ConfigurationSourceFilesDirectories.Выгрузить(, "Source");
	ТЗИсточников.Свернуть("Source");
	
	Для Каждого Стр ИЗ ТЗИсточников Цикл
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Source", Стр.Источник);

		НайденныеСтроки = ConfigurationSourceFilesDirectories.НайтиСтроки(СтруктураПоиска);

		Если НайденныеСтроки.Количество() > 1 Тогда
			UT_CommonClientServer.MessageToUser("С источником исходного кода " + Стр.Source
				+ " обнаружено более одной строки. Запись невозможна",,,, Отказ);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РедакторКода1СПриИзменении(Элемент)
	УстановитьВидимостьЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура КаталогиИсходныхФайловКонфигурацииКаталогНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ТекДанные = Элементы.ConfigurationSourceFilesDirectories.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеФайла = UT_CommonClient.EmptyDescriptionStructureOfSelectedFile();
	ОписаниеФайла.ИмяФайла = ТекДанные.Directory;
	
	ДопПараметрыОповещения = Новый Структура;
	ДопПараметрыОповещения.Вставить("ТекущаяСтрока", Элементы.ConfigurationSourceFilesDirectories.ТекущаяСтрока);
	
	UT_CommonClient.FormFieldFileNameStartChoice(ОписаниеФайла, Элемент, ДанныеВыбора, СтандартнаяОбработка,
		РежимДиалогаВыбораФайла.ВыборКаталога,
		Новый ОписаниеОповещения("КаталогиИсходныхФайловКонфигурацииКаталогНачалоВыбораЗаверешение", ЭтотОбъект,
		ДопПараметрыОповещения));
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура Apply(Команда)
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПрименитьНаСервере();
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура СохранитьМодулиКонфигурацииВФайлы(Команда)
	
	ТекущиеКаталоги = Новый Соответствие;
	Для Каждого ТекСтрока Из ConfigurationSourceFilesDirectories Цикл
		Если Не ЗначениеЗаполнено(ТекСтрока.Source) 
			Или Не ЗначениеЗаполнено(ТекСтрока.Каталог) Тогда
				Продолжить;
		КонецЕсли;

		ТекущиеКаталоги.Вставить(ТекСтрока.Source, ТекСтрока.Каталог);
	КонецЦикла;
	
	UT_CodeEditorClient.СохранитьМодулиКонфигурацииВФайлы(
		Новый ОписаниеОповещения("СохранитьМодулиКонфигурацииВФайлыЗавершение", ЭтотОбъект), ТекущиеКаталоги);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СохранитьМодулиКонфигурацииВФайлыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекКаталог ИЗ Результат Цикл
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Source", ТекКаталог.Источник);
		
		НайденныеСтроки = ConfigurationSourceFilesDirectories.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() = 0 Тогда
			НС = ConfigurationSourceFilesDirectories.Добавить();
			НС.Source = ТекКаталог.Source;
		Иначе
			НС = НайденныеСтроки[0];
		КонецЕсли;
		
		НС.Directory = ТекКаталог.Directory;
	КонецЦикла;
	
	Модифицированность = Истина;
КонецПроцедуры


&НаКлиенте
Процедура КаталогиИсходныхФайловКонфигурацииКаталогНачалоВыбораЗаверешение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекДанные = ConfigurationSourceFilesDirectories.НайтиПоИдентификатору(ДополнительныеПараметры.ТекущаяСтрока);
	ТекДанные.Directory = Результат[0];
	
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	Варианты = UT_CodeEditorClientServer.ВариантыРедактораКода();
	
	ЭтоМонако = РедакторКода1С = Варианты.Monaco;
	
	Элементы.GroupMonacoCodeEditor.Видимость = ЭтоМонако;
КонецПроцедуры

&НаСервере
Процедура УстановитьСписокВыбораЭлементаИзСтруктуры(Элемент, СтруктураДанных)
	Элемент.СписокВыбора.Очистить();
	Для Каждого КлючЗначение ИЗ СтруктураДанных Цикл
		Элемент.СписокВыбора.Добавить(КлючЗначение.Ключ, КлючЗначение.Значение);
	КонецЦикла;		
	
КонецПроцедуры

&НаСервере
Процедура ПрименитьНаСервере()
	ПараметрыРедактораКода = UT_CodeEditorClientServer.ПараметрыРедактораКодаПоУмолчанию();
	ПараметрыРедактораКода.FontSize = FontSize;
	ПараметрыРедактораКода.Вариант = РедакторКода1С;
	
	ПараметрыРедактораКода.Monaco.Тема = MonacoEditorTheme;
	ПараметрыРедактораКода.Monaco.ЯзыкСинтаксиса = MonacoEditorScriptVariant;
	ПараметрыРедактораКода.Monaco.UseScriptMap = UseScriptMap;
	ПараметрыРедактораКода.Monaco.HideLineNumbers = HideLineNumbers;
	ПараметрыРедактораКода.Monaco.LinesHeight = ВысотаСтрок;
	
	Для Каждого ТекСтрока Из ConfigurationSourceFilesDirectories Цикл
		Если Не ЗначениеЗаполнено(ТекСтрока.Каталог) Тогда
			Продолжить;
		КонецЕсли;
	
		ОписаниеКаталога = UT_CodeEditorClientServer.НовыйОписаниеКаталогаИсходныхФайловКонфигурации();
		ОписаниеКаталога.Source = ТекСтрока.Source;
		ОписаниеКаталога.Directory = ТекСтрока.Directory;
		
		ПараметрыРедактораКода.Monaco.КаталогиИсходныхФайлов.Добавить(ОписаниеКаталога);
	КонецЦикла;
	
	UT_CodeEditorServer.УстановитьНовыеНастройкиРедактораКода(ПараметрыРедактораКода);
	
КонецПроцедуры
#КонецОбласти