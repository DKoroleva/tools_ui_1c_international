#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	WindowsClient=UT_CommonClientServer.IsWindows();

	ОбновитьКлиент();
	ОбновитьСервер();

	Элементы.CurrentDirectoryOnServer.СписокВыбора.ЗагрузитьЗначения(HistoryOfChooseServer.ВыгрузитьЗначения());
	Элементы.CurrentDirectoryOnClient.СписокВыбора.ЗагрузитьЗначения(HistoryOfChooseClient.ВыгрузитьЗначения());
	
	УстановитьРамкуТекущейПанели();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	WindowsServer=UT_CommonClientServer.IsWindows();
	PathParentOnClient=ПолучитьРазделительПутиКлиента();
	PathParentOnServer=ПолучитьРазделительПутиСервера();
	CurrentFilesTable="FilesOnLeftPanel";

	ЗаполнитьПодменюСортировок();

	UT_Common.ToolFormOnCreateAtServer(ЭтотОбъект, Отказ, СтандартнаяОбработка,
		Элементы.ГруппаНижняяПанель);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТекущийКаталогСерверПриИзменении(Элемент)
	Если Не ПустаяСтрока(CurrentDirectoryOnServer) И Не Прав(CurrentDirectoryOnServer, 1) = PathParentOnServer Тогда
		CurrentDirectoryOnServer = CurrentDirectoryOnServer + PathParentOnServer;
	КонецЕсли;
	ОбновитьСервер();
	ОбновитьИсториюСервер();
КонецПроцедуры

&НаКлиенте
Процедура ТекущийКаталогКлиентПриИзменении(Элемент)
	Если Не ПустаяСтрока(CurrentDirectoryOnClient) И Не Прав(CurrentDirectoryOnClient, 1) = PathParentOnClient Тогда
		CurrentDirectoryOnClient = CurrentDirectoryOnClient + PathParentOnClient;
	КонецЕсли;
	ОбновитьКлиент();
	ОбновитьИсториюКлиент();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыЛевойПанели

&НаКлиенте
Процедура ФайлыЛеваяПанельВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТаблицаФайловВыбор(Истина, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ФайлыЛеваяПанельПриАктивизацииЯчейки(Элемент)
	CurrentFilesTable=Элемент.Name;
	УстановитьРамкуТекущейПанели();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыПравойПанели
&НаКлиенте
Процедура ФайлыПраваяПанельВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТаблицаФайловВыбор(Ложь, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
КонецПроцедуры
&НаКлиенте
Процедура ФайлыПраваяПанельПриАктивизацииЯчейки(Элемент)
	CurrentFilesTable=Элемент.Name;
	УстановитьРамкуТекущейПанели();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ТаблицаФайловВыбор(ЭтоЛеваяТаблица, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	Если ЭтоЛеваяТаблица Тогда
		ТекущийКаталог=CurrentDirectoryOnClient;
		ТаблицаФайлов=FilesOnLeftPanel;
	Иначе
		ТекущийКаталог=CurrentDirectoryOnServer;
		ТаблицаФайлов=FilesOnRightPanel;
	КонецЕсли;

	ТекущиеДанные=ТаблицаФайлов.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТекущиеДанные.IsDirectory Тогда
		ПерейтиВКаталог(FilesOnLeftPanel, ТекущиеДанные.FullName, ЭтоЛеваяТаблица);
	Иначе
		НачатьЗапускПриложения(UT_CommonClient.ApplicationRunEmptyNotifyDescription(),
			ТекущиеДанные.FullName, ТекущийКаталог);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСервер(Команда = Неопределено)
	Если Не WindowsServer И Не ЗначениеЗаполнено(CurrentDirectoryOnServer) Тогда
		CurrentDirectoryOnServer="/";
	КонецЕсли;

	ОбновитьДеревоФайлов(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКлиент(Команда = Неопределено)
	Если Не WindowsClient И Не ЗначениеЗаполнено(CurrentDirectoryOnClient) Тогда
		CurrentDirectoryOnClient="/";
	КонецЕсли;

	ОбновитьДеревоФайлов(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиСервер(Команда)
	ИмяКаталога = СтрПолучитьСтроку(СтрЗаменить(Команда.Name, "_", Символы.ПС), 2);
	CurrentDirectoryOnServer = ИмяКаталонаНаСервере(ИмяКаталога);
	ОбновитьСервер();
	ОбновитьИсториюСервер();
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКлиент(Команда)
	ИмяКаталога = СтрПолучитьСтроку(СтрЗаменить(Команда.Name, "_", Символы.ПС), 2);
	CurrentDirectoryOnClient = Вычислить(ИмяКаталога + "()");
	ОбновитьКлиент();
	ОбновитьИсториюКлиент();
КонецПроцедуры

&НаКлиенте
Процедура Перейти_РабочийСтол_Клиент(Команда)
	МассивКаталогов = СтрРазделить(КаталогДокументов(), PathParentOnClient);
	Если ПустаяСтрока(МассивКаталогов[МассивКаталогов.ВГраница()]) Тогда
		МассивКаталогов.Удалить(МассивКаталогов.ВГраница());
	КонецЕсли;
	МассивКаталогов[МассивКаталогов.ВГраница()] = "Desktop";
	Путь = "";
	Для Каждого ИмяКаталога Из МассивКаталогов Цикл
		Путь = Путь + ИмяКаталога + PathParentOnClient;
	КонецЦикла;
	CurrentDirectoryOnClient = Путь;
	ОбновитьКлиент();
	ОбновитьИсториюКлиент();
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьНаСервер(Команда)

	КаталогИсточник = CurrentDirectoryOnClient;
	КаталогПриемник = CurrentDirectoryOnServer;
	Если ПустаяСтрока(КаталогПриемник) Тогда
		Возврат;
	КонецЕсли;

	ЭлементТаблицы= Элементы.FilesOnLeftPanel;
	ТаблицаПанели = FilesOnLeftPanel;
	ТекущиеДанные = ЭлементТаблицы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	МассивФайлов = Новый Массив;
	Для Каждого ИдентификаторСтроки Из ЭлементТаблицы.ВыделенныеСтроки Цикл
		СтрокаДерева = ТаблицаПанели.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если СтрДлина(СтрокаДерева.FullName) <= СтрДлина(КаталогИсточник) Тогда
			Возврат;
		КонецЕсли;

		СтрокаСтруктура = Новый Структура("FullName,IsDirectory", СтрокаДерева.FullName, СтрокаДерева.IsDirectory);
		СтрокаСтруктура.Вставить("АдресВХранилище", ПоместитьВоВременноеХранилище(
			Новый ДвоичныеДанные(СтрокаСтруктура.FullName), УникальныйИдентификатор));

		МассивФайлов.Добавить(СтрокаСтруктура);
		Если Не СтрокаСтруктура.IsDirectory Тогда
			Продолжить;
		КонецЕсли;

		Результат = НайтиВсеФайлыНаКлиенте(СтрокаДерева.FullName, PathParentOnClient, УникальныйИдентификатор);
		Для Каждого СтрокаСтруктура Из Результат Цикл
			МассивФайлов.Добавить(СтрокаСтруктура);
		КонецЦикла;
	КонецЦикла;

	Для сч = 0 По МассивФайлов.ВГраница() Цикл
		СтрокаСтруктура = МассивФайлов[сч];
		Состояние("Копирование " + (сч + 1) + " из " + МассивФайлов.Количество() + " : " + СтрокаСтруктура.FullName);

		КонечноеИмяФайла = КаталогПриемник + Сред(СтрокаСтруктура.FullName, СтрДлина(КаталогИсточник) + 1);

		Если СтрокаСтруктура.IsDirectory Тогда
			Файл = Новый Файл(КонечноеИмяФайла);
			Если Не Файл.Существует() Тогда
				СоздатьКаталогНаСервере(КонечноеИмяФайла);
			КонецЕсли;
		Иначе
//			ДвоичныеДанные = Новый ДвоичныеДанные(СтрокаСтруктура.FullName);
//			АдресВХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
			РазвернутьФайлНаСервере(СтрокаСтруктура.АдресВХранилище, КонечноеИмяФайла);
		КонецЕсли;

	КонецЦикла;

	ОбновитьСервер();

КонецПроцедуры

&НаКлиенте
Процедура СкопироватьНаКлиент(Команда)

	КаталогИсточник = CurrentDirectoryOnServer;
	КаталогПриемник = CurrentDirectoryOnClient;
	Если ПустаяСтрока(КаталогПриемник) Тогда
		Возврат;
	КонецЕсли;

	ЭлементТаблицы = Элементы.FilesOnRightPanel;
	ТаблицаПанели = FilesOnRightPanel;
	ТекущиеДанные = ЭлементТаблицы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	МассивФайлов = Новый Массив;
	Для Каждого ИдентификаторСтроки Из ЭлементТаблицы.ВыделенныеСтроки Цикл
		СтрокаДерева = ТаблицаПанели.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если СтрДлина(СтрокаДерева.FullName) <= СтрДлина(КаталогИсточник) Тогда
			Возврат;
		КонецЕсли;

		СтрокаСтруктура = Новый Структура("FullName,IsDirectory", СтрокаДерева.FullName, СтрокаДерева.IsDirectory);
		СтрокаСтруктура.Вставить("АдресВХранилище", ПоместитьВоВременноеХранилищеНаСервере(СтрокаСтруктура.FullName,
			УникальныйИдентификатор));

		МассивФайлов.Добавить(СтрокаСтруктура);
		Если Не СтрокаСтруктура.IsDirectory Тогда
			Продолжить;
		КонецЕсли;

		Результат = НайтиВсеФайлыНаСервере(СтрокаДерева.FullName, PathParentOnServer, УникальныйИдентификатор);

		Для Каждого СтрокаСтруктура Из Результат Цикл
			МассивФайлов.Добавить(СтрокаСтруктура);
		КонецЦикла;
	КонецЦикла;

	Для сч = 0 По МассивФайлов.ВГраница() Цикл
		СтрокаСтруктура = МассивФайлов[сч];
		Состояние("Копирование " + (сч + 1) + " из " + МассивФайлов.Количество() + " : " + СтрокаСтруктура.FullName);

		КонечноеИмяФайла = КаталогПриемник + Сред(СтрокаСтруктура.FullName, СтрДлина(КаталогИсточник) + 1);

		Если СтрокаСтруктура.IsDirectory Тогда
			Файл = Новый Файл(КонечноеИмяФайла);
			Если Не Файл.Существует() Тогда
				СоздатьКаталог(КонечноеИмяФайла);
			КонецЕсли;
		Иначе
//			АдресВХранилище = ПоместитьВоВременноеХранилищеНаСервере(СтрокаСтруктура.FullName,
//				ЭтаФорма.УникальныйИдентификатор);
			ДвоичныеДанные = ПолучитьИзВременногоХранилища(СтрокаСтруктура.АдресВХранилище);
			ДвоичныеДанные.Записать(КонечноеИмяФайла);
		КонецЕсли;

	КонецЦикла;

	ОбновитьКлиент();

КонецПроцедуры

&НаКлиенте
Процедура УдалитьНаКлиенте(Команда)
	Если ПустаяСтрока(CurrentDirectoryOnClient) Тогда
		Возврат;
	КонецЕсли;

	ЭлементТаблица = Элементы.FilesOnLeftPanel;
	ТаблицаПанели = FilesOnLeftPanel;

	ТекущиеДанные = ЭлементТаблица.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Для Каждого Строка Из ЭлементТаблица.ВыделенныеСтроки Цикл
		ТекущиеДанные = ТаблицаПанели.НайтиПоИдентификатору(Строка);
		УдалитьФайлы(ТекущиеДанные.FullName);
	КонецЦикла;

	ОбновитьКлиент();
КонецПроцедуры

&НаКлиенте
Процедура УдалитьНаСервере(Команда)
	Если ПустаяСтрока(CurrentDirectoryOnServer) Тогда
		Возврат;
	КонецЕсли;

	ЭлементТаблица = Элементы.FilesOnRightPanel;
	ТаблицаПанели = FilesOnRightPanel;

	ТекущиеДанные = ЭлементТаблица.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Для Каждого Строка Из ЭлементТаблица.ВыделенныеСтроки Цикл
		ТекущиеДанные = ТаблицаПанели.НайтиПоИдентификатору(Строка);
		УдалитьФайлыНаСервере(ТекущиеДанные.FullName);
	КонецЦикла;

	ОбновитьСервер();

КонецПроцедуры

&НаКлиенте
Процедура ПереместитьССервераНаКлиент(Команда)
	СкопироватьНаКлиент(Неопределено);
	УдалитьНаСервере(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьСКлиентаНаСервер(Команда)
	СкопироватьНаСервер(Неопределено);
	УдалитьНаКлиенте(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПереименоватьНаСервере(Команда)
	Если ПустаяСтрока(CurrentDirectoryOnServer) Тогда
		Возврат;
	КонецЕсли;

	ЭлементДерево = Элементы.FilesOnServer;

	ТекущиеДанные = ЭлементДерево.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
		Возврат;
	КонецЕсли;

	НовоеИмя = ТекущиеДанные.Name + ТекущиеДанные.FileExtension;
	НовоеИмя = СтрЗаменить(НовоеИмя, PathParentOnServer, "");
	Если Не ВвестиСтроку(НовоеИмя) Тогда
		Возврат;
	КонецЕсли;

	ПереименоватьФайлНаСервере(ТекущиеДанные.FullName, CurrentDirectoryOnServer + НовоеИмя, PathParentOnServer);

	ОбновитьСервер();
КонецПроцедуры

&НаКлиенте
Процедура ПереименоватьНаКлиенте(Команда)
	Если ПустаяСтрока(CurrentDirectoryOnClient) Тогда
		Возврат;
	КонецЕсли;

	ЭлементДерево = Элементы.FilesOnLeftPanel;

	ТекущиеДанные = ЭлементДерево.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	//Если ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
	//	Возврат;
	//КонецЕсли;

	НовоеИмя = ТекущиеДанные.Name + ТекущиеДанные.FileExtension;
	НовоеИмя = СтрЗаменить(НовоеИмя, PathParentOnClient, "");
	Если Не ВвестиСтроку(НовоеИмя) Тогда
		Возврат;
	КонецЕсли;

	ПереименоватьФайлНаКлиенте(ТекущиеДанные.FullName, CurrentDirectoryOnServer + НовоеИмя, PathParentOnClient);

	ОбновитьКлиент();
КонецПроцедуры

&НаКлиенте
Процедура ШагНазадКлиент(Команда)
	ШагНазад(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ШагВпередКлиент(Команда)
	ШагВперед(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ШагВверхКлиент(Команда)
	ПерейтиНаУровеньВыше(FilesOnLeftPanel, Истина);
КонецПроцедуры
&НаКлиенте
Процедура ШагНазадСервер(Команда)
	ШагНазад(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ШагВпередСервер(Команда)
	ШагВперед(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ШагВверхСервер(Команда)
	ПерейтиНаУровеньВыше(FilesOnRightPanel, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура Копировать(Команда)
	ЭтоЛеваяПанель=CurrentFilesTable = Элементы.FilesOnLeftPanel.Name;

	Если ЭтоЛеваяПанель Тогда
		СкопироватьНаСервер(Команды.СкопироватьНаСервер);
	Иначе
		СкопироватьНаКлиент(Команды.СкопироватьНаКлиент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Переместить(Команда)
	ЭтоЛеваяПанель=CurrentFilesTable = Элементы.FilesOnLeftPanel.Name;

	Если ЭтоЛеваяПанель Тогда
		ПереместитьСКлиентаНаСервер(Команды.ПереместитьСКлиентаНаСервер);
	Иначе
		ПереместитьССервераНаКлиент(Команды.ПереместитьССервераНаКлиент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКаталогКоманда(Команда)
	ЭтоЛеваяПанель=CurrentFilesTable = Элементы.FilesOnLeftPanel.Name;

	ПоказатьВводСтроки(Новый ОписаниеОповещения("СоздатьКаталогЗавершениеВводаНаименования", ЭтотОбъект,
		Новый Структура("ИмяТаблицыФайлов,ЭтоЛеваяПанель", CurrentFilesTable, ЭтоЛеваяПанель)), ,
		"Введите наименование нового каталога");
КонецПроцедуры

&НаКлиенте
Процедура Удалить(Команда)
	ТекДанные=Элементы[CurrentFilesTable].ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ЭтоЛеваяПанель=CurrentFilesTable = Элементы.FilesOnLeftPanel.Name;

	UT_CommonClient.ShowQuestionToUser(
		Новый ОписаниеОповещения("УдалитьПослеПодтвержденияНеобходимости", ЭтотОбъект,
		Новый Структура("ЭтоЛеваяПанель,FullName", ЭтоЛеваяПанель, ТекДанные.FullName)), "Удалить выбранный файл?",
		РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_УстановитьПорядокСортировки(Команда)
	ПорядокСортировки=Прав(Команда.Name, 4);

	ПрефиксЛевойПанели="ЛеваяПанельГруппаСортировка";
	ПрефиксПравойПанели="ПраваяПанельГруппаСортировка";

	ТаблицаДляСортировки=Неопределено;
	ПрефиксИмени=Неопределено;

	Если СтрНайти(Команда.Name, ПрефиксЛевойПанели) > 0 Тогда
		ТаблицаДляСортировки=FilesOnLeftPanel;
		ПрефиксИмени=ПрефиксЛевойПанели;
	ИначеЕсли СтрНайти(Команда.Name, ПрефиксПравойПанели) > 0 Тогда
		ТаблицаДляСортировки=FilesOnRightPanel;
		ПрефиксИмени=ПрефиксПравойПанели;
	КонецЕсли;

	Если ТаблицаДляСортировки = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ИмяПоляСортировки=СтрЗаменить(Команда.Name, ПрефиксИмени, "");
	ИмяПоляСортировки=СтрЗаменить(ИмяПоляСортировки, ПорядокСортировки, "");

	ТаблицаДляСортировки.Сортировать("IsDirectory УБЫВ, " + ИмяПоляСортировки + " " + ПорядокСортировки);

	Для Каждого Эл Из Элементы[Команда.Name].Родитель.ПодчиненныеЭлементы Цикл
		Эл.Пометка=Ложь;
	КонецЦикла;

	Элементы[Команда.Name].Пометка=Истина;
//	ЭлементыДерева=FilesOnClient.ПолучитьЭлементы().	
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьОбщуюКомандуИнструментов(Команда) 
	UT_CommonClient.Attachable_ExecuteToolsCommonCommand(ЭтотОбъект, Команда);
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьРамкуТекущейПанели()
	ЭтоЛеваяПанель=CurrentFilesTable = Элементы.FilesOnLeftPanel.Name;
	
	Если ЭтоЛеваяПанель Тогда
		АктивнаяПанель=Элементы.FilesOnLeftPanel;
		НеАктивнаяПанель=Элементы.FilesOnRightPanel;
	Иначе
		АктивнаяПанель=Элементы.FilesOnRightPanel;
		НеАктивнаяПанель=Элементы.FilesOnLeftPanel;
	КонецЕсли;
	
	АктивнаяПанель.ЦветРамки=WebЦвета.Красный;
	НеАктивнаяПанель.ЦветРамки=Новый Цвет;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПослеПодтвержденияНеобходимости(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;

	Если ДополнительныеПараметры.ЭтоЛеваяПанель Тогда

		НачатьУдалениеФайлов(Новый ОписаниеОповещения("УдалитьФайлЗавершение", ЭтотОбъект, ДополнительныеПараметры),
			ДополнительныеПараметры.FullName);
	Иначе
		УдалитьФайлыНаСервере(ДополнительныеПараметры.FullName);
		УдалитьФайлЗавершение(ДополнительныеПараметры);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФайлЗавершение(ДополнительныеПараметры) Экспорт
	Если ДополнительныеПараметры.ЭтоЛеваяПанель Тогда
		ОбновитьКлиент();
	Иначе
		ОбновитьСервер();
	КонецЕсли;

КонецПроцедуры
&НаСервереБезКонтекста
Функция СоздатьКаталогНаСервере(FullName)
	Файл=Новый Файл(FullName);
	Если Файл.Существует() Тогда
		UT_CommonClientServer.MessageToUser("Такой каталог уже существует");

		Возврат Неопределено;
	КонецЕсли;

	СоздатьКаталог(Файл.FullName);

	Возврат Файл.FullName;
КонецФункции

&НаКлиенте
Процедура СоздатьКаталогЗавершениеВводаНаименования(Строка, ДополнительныеПараметры) Экспорт
	Если Строка = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Строка) Тогда
		Возврат;
	КонецЕсли;

	ЭтоЛеваяПанель=ДополнительныеПараметры.ЭтоЛеваяПанель;
	Если ЭтоЛеваяПанель Тогда
		ТекущийКаталог=CurrentDirectoryOnClient;
	Иначе
		ТекущийКаталог=CurrentDirectoryOnServer;
	КонецЕсли;

	
	//Проверяем существование каталога

	ДопПараметрыОповещения=ДополнительныеПараметры;
	ДопПараметрыОповещения.Вставить("ТекущийКаталог", ТекущийКаталог);

	ФайлПолноеИмя=ТекущийКаталог + Строка;

	Если ЭтоЛеваяПанель Тогда
		Файл=Новый Файл(ФайлПолноеИмя);
		ДопПараметрыОповещения.Вставить("Файл", Файл);

		Файл.НачатьПроверкуСуществования(
		Новый ОписаниеОповещения("СоздатьКаталогЗавершениеПроверкиСуществованияНовогоКаталога", ЭтотОбъект,
			ДопПараметрыОповещения));
	Иначе
		Результат=СоздатьКаталогНаСервере(ФайлПолноеИмя);
		Если Результат = Неопределено Тогда
			Возврат;
		КонецЕсли;

		СоздатьКаталогЗавершениеСозданияКаталога(Результат, ДопПараметрыОповещения);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СоздатьКаталогЗавершениеПроверкиСуществованияНовогоКаталога(Существует, ДополнительныеПараметры) Экспорт
	Если Существует Тогда
		UT_CommonClientServer.MessageToUser("Такой каталог уже существует");
		Возврат;
	КонецЕсли;

	НачатьСозданиеКаталога(Новый ОписаниеОповещения("СоздатьКаталогЗавершениеСозданияКаталога", ЭтотОбъект,
		ДополнительныеПараметры), ДополнительныеПараметры.Файл.FullName);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКаталогЗавершениеСозданияКаталога(ИмяКаталога, ДополнительныеПараметры) Экспорт

	Если ДополнительныеПараметры.ЭтоЛеваяПанель Тогда
		CurrentDirectoryOnClient=ИмяКаталога;
		ОбновитьКлиент();
	Иначе
		CurrentDirectoryOnServer=ИмяКаталога;
		ОбновитьСервер();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ШагНазад(ЭтоЛеваяТаблица)
	Если ЭтоЛеваяТаблица Тогда
		ИмяПоляТекущегоКаталога="CurrentDirectoryOnClient";
	Иначе
		ИмяПоляТекущегоКаталога="CurrentDirectoryOnServer";
	КонецЕсли;

	ЭлементСписок = Элементы[ИмяПоляТекущегоКаталога].СписокВыбора;
	ТекущееЗначение = ЭтотОбъект[ИмяПоляТекущегоКаталога];

	НайденныйЭлемент = ЭлементСписок.НайтиПоЗначению(ТекущееЗначение);
	Если НайденныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Индекс = ЭлементСписок.Индекс(НайденныйЭлемент);
	Если Индекс + 1 < ЭлементСписок.Количество() - 1 Тогда
		ЭтотОбъект[ИмяПоляТекущегоКаталога] = ЭлементСписок[Индекс + 1].Значение;
		Если ЭтоЛеваяТаблица Тогда
			ОбновитьКлиент();
		Иначе
			ОбновитьСервер();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ШагВперед(ЭтоЛеваяТаблица)
	Если ЭтоЛеваяТаблица Тогда
		ИмяПоляТекущегоКаталога="CurrentDirectoryOnClient";
	Иначе
		ИмяПоляТекущегоКаталога="CurrentDirectoryOnServer";
	КонецЕсли;

	ЭлементСписок = Элементы[ИмяПоляТекущегоКаталога].СписокВыбора;
	ТекущееЗначение = ЭтотОбъект[ИмяПоляТекущегоКаталога];

	НайденныйЭлемент = ЭлементСписок.НайтиПоЗначению(ТекущееЗначение);
	Если НайденныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Индекс = ЭлементСписок.Индекс(НайденныйЭлемент);
	Если Индекс > 0 Тогда
		ЭтотОбъект[ИмяПоляТекущегоКаталога] = ЭлементСписок[Индекс - 1].Значение;
		Если ЭтоЛеваяТаблица Тогда
			ОбновитьКлиент();
		Иначе
			ОбновитьСервер();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиНаУровеньВыше(ТаблицаФайлов, ЭтоЛеваяТаблица)
	ПерейтиВКаталог(ТаблицаФайлов, "..", ЭтоЛеваяТаблица);
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВКаталог(ТаблицаФайлов, ПолноеИмяНовогоКаталога, ЭтоЛеваяТаблица)
	Если ЭтоЛеваяТаблица Тогда
		ИмяПоляКаталога="CurrentDirectoryOnClient";
		РазделительПути=PathParentOnClient;
	Иначе
		ИмяПоляКаталога="CurrentDirectoryOnServer";
		РазделительПути=PathParentOnServer;
	КонецЕсли;

	ТекущийКаталог=ЭтотОбъект[ИмяПоляКаталога];
	НовыйКаталог="";

	Если ПолноеИмяНовогоКаталога = ".." Тогда
		МассивСтрокКаталога=СтрРазделить(ТекущийКаталог, РазделительПути, Истина);
		Если Не ЗначениеЗаполнено(МассивСтрокКаталога[МассивСтрокКаталога.Количество()-1]) Тогда
			МассивСтрокКаталога.Удалить(МассивСтрокКаталога.Количество() - 1);
		КонецЕсли;
		
		Если МассивСтрокКаталога.Количество() = 0 Тогда
			НовыйКаталог="";
		Иначе
			
			МассивСтрокКаталога.Удалить(МассивСтрокКаталога.Количество() - 1);

			//МассивСтрокКаталога.Вставить(0, "");
			МассивСтрокКаталога.Добавить("");

			НовыйКаталог=СтрСоединить(МассивСтрокКаталога, РазделительПути);
		КонецЕсли;
	Иначе
		НовыйКаталог = ПолноеИмяНовогоКаталога;
	КонецЕсли;

	ЭтотОбъект[ИмяПоляКаталога] = НовыйКаталог;

	Если ЭтоЛеваяТаблица Тогда
		ОбновитьКлиент();
		ОбновитьИсториюКлиент();
	Иначе
		ОбновитьСервер();

		ОбновитьИсториюСервер();
	КонецЕсли;

КонецПроцедуры
&НаСервере
Процедура ЗаполнитьПодменюСортировок()
	ПоляУпорядочивания=Новый Структура;
	ПоляУпорядочивания.Вставить("Name", "Name");
	ПоляУпорядочивания.Вставить("FileExtension", "FileExtension");
	ПоляУпорядочивания.Вставить("ModifiedDate", "Дата изменения");
	ПоляУпорядочивания.Вставить("Size", "Size");

	НаправленияСортировки=Новый Структура;
	НаправленияСортировки.Вставить("ВОЗР", " +");
	НаправленияСортировки.Вставить("УБЫВ", " -");

	МассивПодменю=Новый Массив;
	МассивПодменю.Добавить(Элементы.ЛеваяПанельГруппаСортировка);
	МассивПодменю.Добавить(Элементы.ПраваяПанельГруппаСортировка);

	Для Каждого ТекПодменю Из МассивПодменю Цикл
		Для Каждого ПолеУпорядочивания Из ПоляУпорядочивания Цикл
			Для Каждого Направление Из НаправленияСортировки Цикл
				//Сначала добавляем команду, а потом кнопку
				ОписаниеКоманды=UT_Forms.ButtonCommandNewDescription();
				ОписаниеКоманды.Name=ТекПодменю.Name + ПолеУпорядочивания.Ключ + Направление.Ключ;
				ОписаниеКоманды.Title=ПолеУпорядочивания.Значение + Направление.Значение;
				ОписаниеКоманды.Action="Подключаемый_УстановитьПорядокСортировки";
				ОписаниеКоманды.ItemParent=ТекПодменю;
				ОписаниеКоманды.Picture=Новый Картинка;
				ОписаниеКоманды.CommandName=ОписаниеКоманды.Name;

				UT_Forms.CreateCommandByDescription(ЭтотОбъект, ОписаниеКоманды);
				UT_Forms.CreateButtonByDescription(ЭтотОбъект, ОписаниеКоманды);
			КонецЦикла;
		КонецЦикла;

		Элементы[ТекПодменю.Name + "NameВОЗР"].Пометка=Истина;
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура РазвернутьФайлНаСервере(АдресВХранилище, КонечноеИмяФайла)
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВХранилище);
	ДвоичныеДанные.Записать(КонечноеИмяФайла);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДеревоФайлов(НаКлиенте = Истина)
	Если НаКлиенте = Ложь Тогда
		ЭлементДерево = Элементы.FilesOnLeftPanel;
		ТаблицаФайловКаталога = FilesOnRightPanel;
		ТекущийКаталог = CurrentDirectoryOnServer;
		ФайлыТекущегоКаталога = ПолучитьСодержимоеКаталогаНаСервере(ТекущийКаталог, PathParentOnServer,
			WindowsServer);
		ТекущийРазделительПути=PathParentOnServer;
		ЭтоWindows=WindowsServer;
	Иначе
		ЭлементДерево = Элементы.FilesOnLeftPanel;
		ТаблицаФайловКаталога = FilesOnLeftPanel;
		ТекущийКаталог = CurrentDirectoryOnClient;
		ФайлыТекущегоКаталога = ПолучитьСодержимоеКаталогаНаКлиенте(ТекущийКаталог);
		ТекущийРазделительПути=PathParentOnClient;
		ЭтоWindows=WindowsClient;

	КонецЕсли;

	ТаблицаФайловКаталога.Очистить();

//	ТекущийРодитель = Дерево;
	FullName = "";
	ПутьДляРазбора = СтрЗаменить(ТекущийКаталог, ТекущийРазделительПути + ТекущийРазделительПути, ":::");
	PictureIndex = 6;
	Если ПустаяСтрока(ТекущийКаталог) И ЭтоWindows Тогда
		Если ЭтоWindows Тогда
			Если НаКлиенте Тогда
				Диски = ПолучитьСписокДисковWindowsНаКлиенте(ТекущийРазделительПути);
			Иначе
				Диски = ПолучитьСписокДисковWindowsНаСервере(ТекущийРазделительПути);
			КонецЕсли;
			Для Каждого ИмяДиска Из Диски Цикл
				НоваяСтрока = ТаблицаФайловКаталога.Добавить();
				НоваяСтрока.PictureIndex = 2;
				НоваяСтрока.Name = ИмяДиска;
				НоваяСтрока.IsDirectory = Истина;
				НоваяСтрока.FullName = НоваяСтрока.Name;
			КонецЦикла;

			Возврат;

		КонецЕсли;
//	ИначеЕсли Не ЭтоWindows Тогда
//		ТекущийРодитель = ТекущийРодитель.ПолучитьЭлементы().Добавить();
//		ТекущийРодитель.PictureIndex = PictureIndex;
//		ТекущийРодитель.Name = ТекущийРазделительПути;
//		ТекущийРодитель.IsDirectory = Истина;
//		ТекущийРодитель.FullName = ТекущийРазделительПути;
//		PictureIndex = 1;
//
//		Если СтрНачинаетсяС(ПутьДляРазбора, ТекущийРазделительПути) Тогда
//			ПутьДляРазбора=Сред(ПутьДляРазбора, 2);
//		КонецЕсли;
	КонецЕсли;

//	МассивТекущийПуть = СтрРазделить(ПутьДляРазбора, ТекущийРазделительПути);//РазложитьСтрокуВМассивПодстрок(ПутьДляРазбора, ТекущийРазделительПути);
//	Для Каждого ИмяКаталога Из МассивТекущийПуть Цикл
//		Если ПустаяСтрока(ИмяКаталога) Тогда
//			Прервать;
//		КонецЕсли;
//
//		ИмяКаталога = СтрЗаменить(ИмяКаталога, ":::", ТекущийРазделительПути + ТекущийРазделительПути);
//
//		FullName = FullName + ИмяКаталога + ТекущийРазделительПути;
//		ТекущийРодитель = ТекущийРодитель.ПолучитьЭлементы().Добавить();
//		ТекущийРодитель.PictureIndex = PictureIndex;
//		ТекущийРодитель.Name = ИмяКаталога + ТекущийРазделительПути;
//		ТекущийРодитель.IsDirectory = Истина;
//		ТекущийРодитель.FullName = ТекущийРазделительПути + FullName;
//		PictureIndex = 1;
//	КонецЦикла;

	Для Каждого СтрокаСтруктура Из ФайлыТекущегоКаталога Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаФайловКаталога.Добавить(), СтрокаСтруктура);
	КонецЦикла;

	ТаблицаФайловКаталога.Сортировать("IsDirectory УБЫВ, Name");
//	Если ТипЗнч(ТекущийРодитель) = Тип("ДанныеФормыЭлементДерева") Тогда
//		ЭлементДерево.ТекущаяСтрока = ТекущийРодитель.ПолучитьИдентификатор();
//		ЭлементДерево.Развернуть(ЭлементДерево.ТекущаяСтрока);
//	КонецЕсли;

	Если ЗначениеЗаполнено(ТекущийКаталог) И ТекущийКаталог <> ТекущийРазделительПути Тогда
		НоваяСтрока = ТаблицаФайловКаталога.Вставить(0);
		НоваяСтрока.PictureIndex = 2;
		НоваяСтрока.Name = "[..]";
		НоваяСтрока.IsDirectory = Истина;
		НоваяСтрока.FullName = "..";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИсториюКлиент()
	ОбновитьИсторию(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИсториюСервер()
	ОбновитьИсторию(Ложь);
КонецПроцедуры
&НаКлиенте
Процедура ОбновитьИсторию(НаКлиенте = Истина)
	Если НаКлиенте = Ложь Тогда
		ТекущийКаталог = CurrentDirectoryOnServer;
		ЭлементТекущийКаталог = Элементы.CurrentDirectoryOnServer;
		СписокИстория = HistoryOfChooseServer;
	Иначе
		ТекущийКаталог = CurrentDirectoryOnClient;
		ЭлементТекущийКаталог = Элементы.CurrentDirectoryOnClient;
		СписокИстория = HistoryOfChooseClient;
	КонецЕсли;

	НайденныйЭлемент = СписокИстория.НайтиПоЗначению(ТекущийКаталог);
	Если Не НайденныйЭлемент = Неопределено Тогда
		СписокИстория.Удалить(НайденныйЭлемент);
	КонецЕсли;
	СписокИстория.Вставить(0, ТекущийКаталог);

	РазмерСпискаИстории = 25;
	Пока РазмерСпискаИстории < СписокИстория.Количество() Цикл
		СписокИстория.Удалить(СписокИстория.Количество() - 1);
	КонецЦикла;

	ЭлементТекущийКаталог.СписокВыбора.ЗагрузитьЗначения(СписокИстория.ВыгрузитьЗначения());
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСодержимоеКаталогаНаСервере(Каталог, РазделительПути, ЭтоWindows)
	Возврат ПолучитьСодержимоеКаталога(Каталог, РазделительПути, ЭтоWindows);
КонецФункции

&НаКлиенте
Функция ПолучитьСодержимоеКаталогаНаКлиенте(Каталог)
	Возврат ПолучитьСодержимоеКаталога(Каталог, PathParentOnClient, WindowsClient);
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСодержимоеКаталога(Каталог, РазделительПути, ЭтоWindows)
	Результат = Новый Массив;

	Файлы = НайтиФайлы(Каталог, "*", Ложь);
	Для Каждого Файл Из Файлы Цикл
		Если Ложь Тогда
			Файл = Новый Файл;
		КонецЕсли;

//		Если Не ЭтоWindows И Лев(Файл.FullName, 2) = "//" Тогда
//			Файл=Новый Файл(Сред(Файл.FullName, 2));
//		Иначе
//			Файл
//		КонецЕсли;

//		Если Не Файл.Существует() Тогда
//			Продолжить
//		КонецЕсли;

		Если Не Файл.Существует() Тогда
			IsDirectory=Ложь;
		Иначе
			IsDirectory=Файл.IsDirectory();
		КонецЕсли;

		ПолноеИмяФайла=Файл.FullName + ?(IsDirectory, РазделительПути, "");
		Если Не ЭтоWindows И Лев(Файл.FullName, 2) = "//" Тогда
			ПолноеИмяФайла=Сред(Файл.FullName, 2);
		КонецЕсли;

		Если ПолноеИмяФайла = "/./" Или ПолноеИмяФайла = "/../" 
			Или ПолноеИмяФайла="/." Или ПолноеИмяФайла= "/.." Тогда
			Продолжить;
		КонецЕсли;

		СтрокаСтруктура = Новый Структура;

		СтрокаСтруктура.Вставить("IsDirectory", IsDirectory);
		СтрокаСтруктура.Вставить("FullName", ПолноеИмяФайла);

		Если СтрокаСтруктура.IsDirectory Тогда
			Если ЗначениеЗаполнено(Файл.Name) Тогда
				ИмяФайла=Файл.Name;
			Иначе
				ИмяФайла=СтрЗаменить(Файл.Путь, РазделительПути, "");
			КонецЕсли;

			ИмяФайла=ИмяФайла + РазделительПути;
		Иначе
			ИмяФайла=Файл.ИмяБезРасширения;
		КонецЕсли;

		Если Не ЗначениеЗаполнено(ИмяФайла) Тогда
			ИмяФайла=ПолноеИмяФайла;

			Если Не СтрокаСтруктура.IsDirectory И СтрНачинаетсяС(ИмяФайла, РазделительПути) Тогда
				ИмяФайла=Сред(ИмяФайла, 2);
			КонецЕсли;
		КонецЕсли;
		СтрокаСтруктура.Вставить("Name", ИмяФайла);
		СтрокаСтруктура.Вставить("FileExtension", ?(СтрокаСтруктура.IsDirectory, "", Файл.Extension));
		СтрокаСтруктура.Вставить("PictureIndex", PictureIndex(СтрокаСтруктура.FileExtension,
			СтрокаСтруктура.IsDirectory));

		Попытка
			СтрокаСтруктура.Вставить("ModifiedDate", Файл.ПолучитьВремяИзменения());
		Исключение
			СтрокаСтруктура.Вставить("ModifiedDate", '00010101');
		КонецПопытки;

		Если Не СтрокаСтруктура.IsDirectory Тогда
			Попытка
				СтрокаСтруктура.Вставить("Size", Файл.Size() / 1000);
			Исключение
				СтрокаСтруктура.Вставить("Size", 0);
			КонецПопытки;
		КонецЕсли;
		СтрокаСтруктура.Вставить("Представление", Формат(СтрокаСтруктура.ModifiedDate, "ДФ='yyyy-MM-dd HH:MM:ss'"));

		Результат.Добавить(СтрокаСтруктура);
	КонецЦикла;

//	Результат.СортироватьПоПредставлению(НаправлениеСортировки.Убыв);
//	Возврат Результат.ВыгрузитьЗначения();

	Возврат Результат;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция PictureIndex(Знач FileExtension, IsDirectory)
	Если IsDirectory Тогда
		Возврат 2;
	Иначе
		Возврат UT_CommonClientServer.GetFileIconIndex(FileExtension);
	КонецЕсли;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСписокДисковWindows(РазделительПути)
	Результат = Новый Массив;

	Для сч = 0 По 25 Цикл
		БукваДиска = Символ(КодСимвола("A") + сч) + ":" + РазделительПути;
		Если НайтиФайлы(БукваДиска).Количество() > 0 Тогда
			Результат.Добавить(БукваДиска);
		КонецЕсли;
	КонецЦикла;

	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСписокДисковWindowsНаСервере(РазделительПути)
	Возврат ПолучитьСписокДисковWindows(РазделительПути);
КонецФункции

&НаКлиенте
Функция ПолучитьСписокДисковWindowsНаКлиенте(РазделительПути)
	Возврат ПолучитьСписокДисковWindows(РазделительПути);
КонецФункции


&НаСервереБезКонтекста
Функция ИмяКаталонаНаСервере(ИмяКаталога)
	Возврат Вычислить(ИмяКаталога + "()");
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция РазмерФайла(РазмерФайлаВБайтах, ЕдиницаИзмерения)
	ЕдиницаИзмерения = "КБ";
	Возврат РазмерФайлаВБайтах / 1000;
КонецФункции

&НаСервереБезКонтекста
Процедура УдалитьФайлыНаСервере(ИмяФайла)
	УдалитьФайлы(ИмяФайла);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПоместитьВоВременноеХранилищеНаСервере(ИсходныйФайл, ИдентификаторФормы)
	ДвоичныеДанные = Новый ДвоичныеДанные(ИсходныйФайл);
	АдресВХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ИдентификаторФормы);
	Возврат АдресВХранилище;
КонецФункции

&НаСервереБезКонтекста
Функция НайтиВсеФайлыНаСервере(ТекущийКаталог, РазделительПути, УникальныйИдентификаторФормы)
	Результат = Новый Массив;

	НайденныеФайлы = НайтиФайлы(ТекущийКаталог, "*", Истина);
	Для Каждого Файл Из НайденныеФайлы Цикл
		СтрокаСтруктура = Новый Структура;
		Результат.Добавить(СтрокаСтруктура);

		СтрокаСтруктура.Вставить("IsDirectory", Файл.IsDirectory());
		СтрокаСтруктура.Вставить("FullName", Файл.FullName + ?(СтрокаСтруктура.IsDirectory, РазделительПути, ""));
		СтрокаСтруктура.Вставить("АдресВХранилище", ПоместитьВоВременноеХранилище(
			Новый ДвоичныеДанные(СтрокаСтруктура.FullName), УникальныйИдентификаторФормы));
	КонецЦикла;

	Возврат Результат;
КонецФункции

&НаКлиенте
Функция НайтиВсеФайлыНаКлиенте(ТекущийКаталог, РазделительПути, УникальныйИдентификаторФормы)
	Результат = Новый Массив;

	НайденныеФайлы = НайтиФайлы(ТекущийКаталог, "*", Истина);
	Для Каждого Файл Из НайденныеФайлы Цикл
		СтрокаСтруктура = Новый Структура;
		Результат.Добавить(СтрокаСтруктура);

		СтрокаСтруктура.Вставить("IsDirectory", Файл.IsDirectory());
		СтрокаСтруктура.Вставить("FullName", Файл.FullName + ?(СтрокаСтруктура.IsDirectory, РазделительПути, ""));
		СтрокаСтруктура.Вставить("АдресВХранилище", ПоместитьВоВременноеХранилище(
			Новый ДвоичныеДанные(СтрокаСтруктура.FullName), УникальныйИдентификаторФормы));

	КонецЦикла;

	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Процедура ПереименоватьФайлНаСервере(ИмяФайлаИсточника, ИмяФайлаПриемника, РазделительПути)
	Файл = Новый Файл(ИмяФайлаИсточника);
	Если Файл.ЭтоФайл() Тогда
		ПереместитьФайл(ИмяФайлаИсточника, ИмяФайлаПриемника);
	Иначе
		МассивСлов = СтрРазделить(ИмяФайлаПриемника, РазделительПути);
		Если ПустаяСтрока(МассивСлов[МассивСлов.ВГраница()]) Тогда
			МассивСлов.Удалить(МассивСлов.ВГраница());
		КонецЕсли;
		//ФСО = Новый COMОбъект("Scripting.FileSystemObject");

		//ФСО.GetFolder(ИмяФайлаИсточника).Name = МассивСлов[МассивСлов.ВГраница()];
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПереименоватьФайлНаКлиенте(ИмяФайлаИсточника, ИмяФайлаПриемника, РазделительПути)
	Файл = Новый Файл(ИмяФайлаИсточника);
	//Если Файл.ЭтоФайл() Тогда
		ПереместитьФайл(ИмяФайлаИсточника, ИмяФайлаПриемника);
	//Иначе
	//	МассивСлов = СтрРазделить(ИмяФайлаПриемника, РазделительПути);
	//	Если ПустаяСтрока(МассивСлов[МассивСлов.ВГраница()]) Тогда
	//		МассивСлов.Удалить(МассивСлов.ВГраница());
	//	КонецЕсли;
	//	//ФСО = Новый COMОбъект("Scripting.FileSystemObject");

	//	//ФСО.GetFolder(ИмяФайлаИсточника).Name = МассивСлов[МассивСлов.ВГраница()];
	//КонецЕсли;

КонецПроцедуры


#КонецОбласти