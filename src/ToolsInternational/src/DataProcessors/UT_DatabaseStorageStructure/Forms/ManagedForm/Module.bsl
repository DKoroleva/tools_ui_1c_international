&AtServer
Procedure GetStructure()

	DataBaseStructure = GetFromTempStorage(DataBaseStructureAdress);

	If DataBaseStructure = Undefined Then

		DataBaseStructure = GetDBStorageStructureInfo();
		PutToTempStorage(DataBaseStructure, DataBaseStructureAdress);

	EndIf;

	FullResultTable(DataBaseStructure);
EndProcedure

&AtServer
Procedure FullResultTable(DataBaseStructure, FoundedRows = Undefined)
	Результат.Очистить();

	If FoundedRows = Undefined Then
		СтрокиДляРезультата=DataBaseStructure;
	Else
		СтрокиДляРезультата=FoundedRows;
	Endif;

	For each Строка in СтрокиДляРезультата do
		НоваяСтрока = Результат.Добавить();
		НоваяСтрока.ИмяТаблицы = Строка.ИмяТаблицы;
		НоваяСтрока.Метаданные = Строка.Метаданные;
		НоваяСтрока.Назначение = Строка.Назначение;
		НоваяСтрока.ИмяТаблицыХранения = Строка.ИмяТаблицыХранения;

		For each Поле in Строка.Поля do
			НоваяСтрокаПолей = НоваяСтрока.Поля.Добавить();
			НоваяСтрокаПолей.ИмяПоляХранения = Поле.ИмяПоляХранения;
			НоваяСтрокаПолей.ИмяПоля = Поле.ИмяПоля;
			НоваяСтрокаПолей.Метаданные = Поле.Метаданные;
		EndDo;

		For each  Индекс in Строка.Индексы do
			НоваяСтрокаИндексов = НоваяСтрока.Индексы.Добавить();
			НоваяСтрокаИндексов.ИмяИндексаХранения = Индекс.ИмяИндексаХранения;

			// Поля индекса
			for each Поле in Индекс.Поля do
				НоваяСтрокаПолейИндекса = НоваяСтрокаИндексов.ПоляИндекса.Добавить();
				НоваяСтрокаПолейИндекса.ИмяПоляХранения = Поле.ИмяПоляХранения;
				НоваяСтрокаПолейИндекса.ИмяПоля = Поле.ИмяПоля;
				НоваяСтрокаПолейИндекса.Метаданные = Поле.Метаданные;
			EndDo;

		EndDo;

	EndDo;

	Результат.Сортировать("Метаданные ВОЗР,ИмяТаблицы ВОЗР");
EndProcedure

&AtServer
Процедура НайтиПоИмениТаблицыХранения()

	DataBaseStructure = GetFromTempStorage(DataBaseStructureAdress);

	ИмяДляПоиска = Upper(СокрЛП(Отбор));
	Если Не ТочноеСоответствие И Left(ИмяДляПоиска, 1) = "_" Тогда
		ИмяДляПоиска = Mid(ИмяДляПоиска, 2);
	КонецЕсли;
	FoundedRows = New Array;

	If isBlankString (ИмяДляПоиска) Then
		Return;
	EndIf;

	Для Каждого Строка Из DataBaseStructure Цикл

		Если IncludingFields Тогда
			Для Каждого СтрокаПоле Из Строка.Поля Цикл
				Если ТочноеСоответствие Тогда
					Если ВРЕГ(СтрокаПоле.ИмяПоляХранения) = ИмяДляПоиска Или ВРЕГ(СтрокаПоле.ИмяПоля) = ИмяДляПоиска Тогда
						FoundedRows.Добавить(Строка);
					КонецЕсли;
				Иначе

					Если Найти(ВРЕГ(СтрокаПоле.ИмяПоляХранения), ИмяДляПоиска) > 0 Или Найти(ВРЕГ(СтрокаПоле.ИмяПоля),
						ИмяДляПоиска) Тогда
						FoundedRows.Добавить(Строка);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;

		Если ТочноеСоответствие Тогда
			Если ВРЕГ(Строка.ИмяТаблицыХранения) = ИмяДляПоиска Или ВРЕГ(Строка.ИмяТаблицы) = ИмяДляПоиска Или ВРЕГ(
				Строка.Метаданные) = ИмяДляПоиска Или ВРЕГ(Строка.Назначение) = ИмяДляПоиска Тогда
				FoundedRows.Добавить(Строка);
			КонецЕсли;
		Иначе
			Если Найти(ВРЕГ(Строка.ИмяТаблицыХранения), ИмяДляПоиска) > 0 Или Найти(ВРЕГ(Строка.ИмяТаблицы),
				ИмяДляПоиска) Или Найти(ВРЕГ(Строка.Метаданные), ИмяДляПоиска) Или Найти(ВРЕГ(Строка.Назначение),
				ИмяДляПоиска) Тогда
				FoundedRows.Добавить(Строка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	FullResultTable(FoundedRows);
КонецПроцедуры

&AtClient
Процедура УстановитьОтбор(Команда)

	НайтиПоИмениТаблицыХранения();

КонецПроцедуры

&AtServer
Procedure OnCreateAtServer(Cancel, StandardProcessing)

	DataBaseStructureAdress = PutToTempStorage(Undefined, UUID );
	GetStructure();
	
	УИ_ОбщегоНазначения.ФормаИнструментаПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);

EndProcedure

&AtClient
Процедура ОтборОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)

	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.Добавить(Текст);
	СтандартнаяОбработка = Ложь;
	Отбор = Текст;
	НайтиПоИмениТаблицыХранения();

КонецПроцедуры

&AtClient
Procedure ВключаяПоляOnChange(Item)
	НайтиПоИмениТаблицыХранения();
EndProcedure

&AtClient
Procedure ТочноеСоответствиеOnChange(Item)
	НайтиПоИмениТаблицыХранения();
EndProcedure

&AtClient
Процедура Подключаемый_ВыполнитьОбщуюКомандуИнструментов(Команда) Экспорт
	UT_CommonClient.Подключаемый_ВыполнитьОбщуюКомандуИнструментов(ЭтотОбъект, Команда);
КонецПроцедуры