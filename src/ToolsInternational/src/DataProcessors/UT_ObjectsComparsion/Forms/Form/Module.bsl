&AtServerNoContext
Procedure ДобавитьВДерево(ДЗ, СсылкаНаОбъект)
	МД = СсылкаНаОбъект.Метаданные();
	УИД = СсылкаНаОбъект.УникальныйИдентификатор();
	ГУИД = "id_" + СтрЗаменить(УИД, "-", "_");
	
	ДЗ.Колонки.Добавить(ГУИД, Новый ОписаниеТипов());

	//Реквизиты
	Строки = ДЗ.Строки;
	Строка = Строки.Найти(" Реквизиты", "Реквизит");
	Если Строка = Неопределено Тогда
		Строка = Строки.Добавить();
		Строка.Реквизит = " Реквизиты";
	КонецЕсли;
	Строка[ГУИД] = СсылкаНаОбъект;

	Строки = Строка.Строки;
	Реквизиты = МД.Реквизиты;
	Для Каждого Реквизит Из Реквизиты Цикл
		РеквизитИмя = Реквизит.Имя; 
		
		Строка = Строки.Найти(РеквизитИмя, "Реквизит");
		Если Строка = Неопределено Тогда
			Строка = Строки.Добавить();
			Строка.Реквизит = РеквизитИмя;
		КонецЕсли;
		Строка[ГУИД] = СсылкаНаОбъект[РеквизитИмя]; 
	КонецЦикла;

	//Табличные части
	Для Каждого ТЧ Из МД.ТабличныеЧасти Цикл
		Если СсылкаНаОбъект[ТЧ.Имя].Количество() = 0 Тогда Продолжить; КонецЕсли;
		РеквизитИмя = ТЧ.Имя; 
		
		Строки = ДЗ.Строки;
		Строка = Строки.Найти(РеквизитИмя, "Реквизит");
		Если Строка = Неопределено Тогда
			Строка = Строки.Добавить();
			Строка.Реквизит = РеквизитИмя;
		КонецЕсли;

		//Строки табличной части
		СтрокиНС = Строка.Строки;
		Для Каждого СтрокаТЧ Из СсылкаНаОбъект[ТЧ.Имя] Цикл
			НомерСтроки = "Строка № " + Формат(СтрокаТЧ.НомерСтроки, "ЧЦ=4; ЧВН=; ЧГ=");
			СтрокаНС = СтрокиНС.Найти(НомерСтроки, "Реквизит");
			Если СтрокаНС = Неопределено Тогда 
				СтрокаНС = СтрокиНС.Добавить();
				СтрокаНС.Реквизит = НомерСтроки;
			КонецЕсли;
			
			//Значения строк табличной части
			СтрокиРС = СтрокаНС.Строки;
			Для Каждого Реквизит Из МД.ТабличныеЧасти[ТЧ.Имя].Реквизиты Цикл
				РеквизитИмя = Реквизит.Имя; 

				СтрокаРС = СтрокиРС.Найти(РеквизитИмя, "Реквизит");
				Если СтрокаРС = Неопределено Тогда
					СтрокаРС = СтрокиРС.Добавить();
					СтрокаРС.Реквизит = РеквизитИмя;
				КонецЕсли;
				Значение = СтрокаТЧ[РеквизитИмя];
				СтрокаРС[ГУИД] = ?(ЗначениеЗаполнено(Значение), Значение, Неопределено);
			КонецЦикла;

		КонецЦикла;
	КонецЦикла;
	
	Строки = ДЗ.Строки;
	Строки.Сортировать("Реквизит", Истина);
EndProcedure

&AtServerNoContext
Procedure ПочиститьДерево(ДЗ, Строки = Неопределено) 
	
	Колонки = Новый Массив;
	Для Каждого Колонка Из ДЗ.Колонки Цикл
		Если Колонка.Имя = "Реквизит" Тогда Продолжить; КонецЕсли;
		Колонки.Добавить(Колонка.Имя);
	КонецЦикла;
	Колонок = Колонки.Количество() - 1;
	Если Колонок = 0 Тогда Возврат КонецЕсли;

	Если Строки = Неопределено Тогда
		Строки = ДЗ.Строки;
	КонецЕсли;

	УдаляемыеСтроки = Новый Массив;
	Для Каждого Строка Из Строки Цикл
		ЕстьПодчиненные = Строка.Строки.Количество() > 0;
		
		Если ЕстьПодчиненные Тогда
			ПочиститьДерево(ДЗ, Строка.Строки);
		Иначе Сч = 0;
			Для Кол = 1 По Колонок Цикл
				Сч = Сч + ?(Строка[Колонки[0]] = Строка[Колонки[Кол]], 1, 0);
			КонецЦикла;
			Если Сч = Колонок Тогда УдаляемыеСтроки.Добавить(Строка); КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Строка Из УдаляемыеСтроки Цикл
		Строки.Удалить(Строка);
	КонецЦикла;

EndProcedure

&AtServer
Procedure СформироватьПечатнуюФормуСравненияОбъектов() Экспорт

	ДЗ = Новый ДеревоЗначений;
	ДЗ.Колонки.Добавить("Реквизит", Новый ОписаниеТипов());

	Для Каждого ОбъектЭлемент Из Objects Цикл
		СсылкаНаОбъект = ОбъектЭлемент.Значение;
		ДобавитьВДерево(ДЗ, СсылкаНаОбъект);
	КонецЦикла;

	ПочиститьДерево(ДЗ);

	SpreadsheetDocument = Новый ТабличныйДокумент;
	SpreadsheetDocument.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Обработка_СравнениеОбъектов";
	Макет = Обработки.UT_ObjectsComparsion.ПолучитьМакет("PF_MXL_ComparisonObjects");
	
	SpreadsheetDocument.НачатьАвтогруппировкуСтрок();
	Уровень = 1;
	Для Каждого Строка Из ДЗ.Строки Цикл
		ВывестиСтроку(Строка, ДЗ.Колонки, SpreadsheetDocument, Макет, Уровень);
	КонецЦикла;
	SpreadsheetDocument.ЗакончитьАвтогруппировкуСтрок();
	
	ОбластьШапка = SpreadsheetDocument.Область(1,,1);
	SpreadsheetDocument.ПовторятьПриПечатиСтроки = ОбластьШапка;
	SpreadsheetDocument.ТолькоПросмотр = Истина;
	SpreadsheetDocument.АвтоМасштаб = Истина;
	SpreadsheetDocument.ФиксацияСверху = 1;
	SpreadsheetDocument.ФиксацияСлева = 1;
	
EndProcedure

&AtServerNoContext
Procedure ВывестиСтроку(Строка, Колонки, ТабличныйДокумент, Макет, Уровень)
	ЕстьВложенныеСтроки = Строка.Строки.Количество() > 0;
	
	ОбластьРеквизит = Макет.ПолучитьОбласть("Реквизит");
	ОбластьРеквизит.Параметры.Реквизит = СокрЛП(Строка.Реквизит);
	Если ЕстьВложенныеСтроки Тогда ОформитьОбласть(ОбластьРеквизит); КонецЕсли;
	ТабличныйДокумент.Вывести(ОбластьРеквизит, Уровень);
	
	ОбластьКолонка = Макет.ПолучитьОбласть("Значение");
	Для Каждого Колонка Из Колонки Цикл
		Если Колонка.Имя = "Реквизит" Тогда Продолжить; КонецЕсли;
		Значение = Строка[Колонка.Имя];
		ОбластьКолонка.Параметры.Значение = Значение;
		Если ЕстьВложенныеСтроки Тогда ОформитьОбласть(ОбластьКолонка); КонецЕсли;
		ТабличныйДокумент.Присоединить(ОбластьКолонка, Уровень);
	КонецЦикла;
	

	Если ЕстьВложенныеСтроки Тогда
		Для Каждого ПодСтрока Из Строка.Строки Цикл
			ВывестиСтроку(ПодСтрока, Колонки, ТабличныйДокумент, Макет, Уровень + 1);
		КонецЦикла;
	КонецЕсли;
EndProcedure

&AtServerNoContext
Procedure ОформитьОбласть(Область)
	Шрифт = Область.ТекущаяОбласть.Шрифт;
	Область.ТекущаяОбласть.Шрифт = Новый Шрифт(Шрифт,,,Истина);
	Область.ТекущаяОбласть.ЦветФона = ЦветаСтиля.ЦветФонаШапкиОтчета;
EndProcedure


&AtServer
Procedure OnCreateAtServer(Cancel, StandardProcessing)
	//TODO: Insert the handler content
EndProcedure

&AtServer
Procedure СформироватьAtServer()
	СформироватьПечатнуюФормуСравненияОбъектов();
EndProcedure

&НаКлиенте
Procedure Generate(Команда)
	Если Objects.Количество() = 0 Тогда
		Элементы.FormParameters.Пометка = Истина;
		Элементы.GroupParameters.Видимость = Истина;
		ТекущийЭлемент = Элементы.Objects;
		Возврат;
	КонецЕсли;
	СформироватьAtServer();
EndProcedure

&НаКлиенте
Procedure Parameters(Команда)
	Пометка = Не Элементы.FormParameters.Пометка;
	Элементы.FormParameters.Пометка = Пометка;
	Элементы.GroupParameters.Видимость = Пометка;
EndProcedure

&AtServer
Procedure ПриСозданииAtServer(Отказ, СтандартнаяОбработка)
	Objects.Очистить();
	Если Параметры.Свойство("СравниваемыеОбъекты") Тогда
		Objects.ЗагрузитьЗначения(Параметры.СравниваемыеОбъекты);
	КонецЕсли;
	СформироватьAtServer();
	
	//UT_Common.ФормаИнструментаПриСозданииAtServer(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
EndProcedure


&AtServer
Procedure ДобавитьРанееДобавленныеКСравнениюAtServer()
	МассивОбъектовКСравнению=UT_Common.ObjectsAddedToTheComparison();
	
	Для Каждого ТекОбъект ИЗ МассивОбъектовКСравнению Цикл
		Если Objects.НайтиПоЗначению(ТекОбъект)<>Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Objects.Добавить(ТекОбъект);
	КонецЦикла;
EndProcedure


&НаКлиенте
Procedure ДобавитьРанееДобавленныеКСравнению(Команда)
	ДобавитьРанееДобавленныеКСравнениюAtServer();
EndProcedure


&AtServer
Procedure ОчиститьРанееДобавленныеКСравнениюAtServer()
	UT_Common.ClearObjectsAddedToTheComparison();
EndProcedure


&НаКлиенте
Procedure ОчиститьРанееДобавленныеКСравнению(Команда)
	ОчиститьРанееДобавленныеКСравнениюAtServer();
EndProcedure

//@skip-warning
&НаКлиенте
Procedure Подключаемый_ВыполнитьОбщуюКомандуИнструментов(Команда) 
	UT_CommonClient.Attachable_ExecuteToolsCommonCommand(ЭтотОбъект, Команда);
EndProcedure
